PartType output;
PartType rbs;
PartType cds;
PartType scar;
PartType promoter;
PartType terminator;
PartType ribozyme;

cds AmtR(.SEQUENCE("ATGGCAGGCGCAGTTGGTCGTCCGCGTCGTAGTGCACCGCGTCGTGCAGGTAAAAATCCGCGTGAAGAAATTCTGGATGCAAGCGCAGAACTGTTTACCCGTCAGGGTTTTGCAACCACCAGTACCCATCAGATTGCAGATGCAGTTGGTATTCGTCAGGCAAGCCTGTATTATCATTTTCCGAGCAAAACCGAAATCTTTCTGACCCTGCTGAAAAGCACCGTTGAACCGAGCACCGTTCTGGCAGAAGATCTGAGCACCCTGGATGCAGGTCCGGAAATGCGTCTGTGGGCAATTGTTGCAAGCGAAGTTCGTCTGCTGCTGAGCACCAAATGGAATGTTGGTCGTCTGTATCAGCTGCCGATTGTTGGTAGCGAAGAATTTGCAGAATATCATAGCCAGCGTGAAGCACTGACCAATGTTTTTCGTGATCTGGCAACCGAAATTGTTGGTGATGATCCGCGTGCAGAACTGCCGTTTCATATTACCATGAGCGTTATTGAAATGCGTCGCAATGATGGTAAAATTCCGAGTCCGCTGAGCGCAGATAGCCTGCCGGAAACCGCAATTATGCTGGCAGATGCAAGCCTGGCAGTTCTGGGTGCACCGCTGCCTGCAGATCGTGTTGAAAAAACCCTGGAACTGATTAAACAGGCAGATGCAAAATAA"));
cds BM3R1(.SEQUENCE("ATGGAAAGCACCCCGACCAAACAGAAAGCAATTTTTAGCGCAAGCCTGCTGCTGTTTGCAGAACGTGGTTTTGATGCAACCACCATGCCGATGATTGCAGAAAATGCAAAAGTTGGTGCAGGCACCATTTATCGCTATTTCAAAAACAAAGAAAGCCTGGTGAACGAACTGTTTCAGCAGCATGTTAATGAATTTCTGCAGTGTATTGAAAGCGGTCTGGCAAATGAACGTGATGGTTATCGTGATGGCTTTCATCACATTTTTGAAGGTATGGTGACCTTTACCAAAAATCATCCGCGTGCACTGGGTTTTATCAAAACCCATAGCCAGGGCACCTTTCTGACCGAAGAAAGCCGTCTGGCATATCAGAAACTGGTTGAATTTGTGTGCACCTTTTTTCGTGAAGGTCAGAAACAGGGTGTGATTCGTAATCTGCCGGAAAATGCACTGATTGCAATTCTGTTTGGCAGCTTTATGGAAGTGTATGAAATGATCGAGAACGATTATCTGAGCCTGACCGATGAACTGCTGACCGGTGTTGAAGAAAGCCTGTGGGCAGCACTGAGCCGTCAGAGCTAA"));
cds DigiJ(.SEQUENCE("ATGGAC"));
cds DigiJQ(.SEQUENCE("ATGGACACJT"));
cds HlyIIR(.SEQUENCE("ATGAAATACATCCTGTTTGAGGTGTGCGAAATGGGTAAAAGCCGTGAACAGACCATGGAAAATATTCTGAAAGCAGCCAAAAAGAAATTCGGCGAACGTGGTTATGAAGGCACCAGCATTCAAGAAATTACCAAAGAAGCCAAAGTTAACGTTGCAATGGCCAGCTATTACTTTAATGGCAAAGAGAACCTGTACTACGAGGTGTTCAAAAAATACGGTCTGGCAAATGAACTGCCGAACTTTCTGGAAAAAAACCAGTTTAATCCGATTAATGCCCTGCGTGAATATCTGACCGTTTTTACCACCCACATTAAAGAAAATCCGGAAATTGGCACCCTGGCCTATGAAGAAATTATCAAAGAAAGCGCACGCCTGGAAAAAATCAAACCGTATTTTATCGGCAGCTTCGAACAGCTGAAAGAAATTCTGCAAGAGGGTGAAAAACAGGGTGTGTTTCACTTTTTTAGCATCAACCATACCATCCATTGGATTACCAGCATTGTTCTGTTTCCGAAATTCAAAAAATTCATCGATAGCCTGGGTCCGAATGAAACCAATGATACCAATCATGAATGGATGCCGGAAGATCTGGTTAGCCGTATTATTAGCGCACTGACCGATAAACCGAACATTTAA"));
cds IcaRA(.SEQUENCE("GTGAAAGACAAAATTATCGATAACGCCATCACCCTGTTTAGCGAAAAAGGTTATGACGGCACCACCCTGGATGATATTGCAAAAAGCGTGAACATCAAAAAAGCCAGCCTGTATTATCACTTTGATAGCAAAAAAAGCATCTACGAGCAGAGCGTTAAATGCTGTTTCGATTATCTGAACAACATCATCATGATGAACCAGAACAAAAGCAACTATAGCATCGATGCCCTGTATCAGTTTCTGTTTGAGTTCATCTTCGATATCGAGGAACGCTATATTCGTATGTATGTTCAGCTGAGCAACACACCGGAAGAATTTTCAGGTAACATTTATGGCCAGATCCAGGATCTGAATCAGAGCCTGAGCAAAGAAATCGCCAAATTCTATGACGAAAGCAAAATCAAAATGACCAAAGAGGACTTCCAGAATCTGATTCTGCTGTTTCTGGAAAGCTGGTATCTGAAAGCCAGCTTTAGCCAGAAATTTGGTGCAGTTGAAGAAAGCAAAAGCCAGTTTAAAGATGAGGTTTATAGCCTGCTGAACATCTTTCTGAAGAAATAA"));
cds LitR(.SEQUENCE("ATGGATACCATTCAGAAACGTCCGCGTACCCGTCTGAGTCCGGAAAAACGTAAAGAACAGCTGCTGGATATTGCCATTGAAGTTTTTAGCCAGCGTGGTATTGGTCGTGGTGGTCATGCAGATATTGCAGAAATTGCACAGGTTAGCGTTGCAACCGTGTTTAACTATTTTCCGACCCGTGAAGATCTGGTTGATGATGTTCTGAACAAAGTGGAAAACGAGTTTCACCAGTTCATCAATAACAGCATTAGCCTGGATCTGGATGTTCGTAGCAATCTGAATACCCTGCTGCTGAACATTATTGATAGCGTTCAGACCGGCAACAAATGGATTAAAGTTTGGTTTGAATGGTCAACCAGCACCCGTGATGAAGTTTGGCCTCTGTTTCTGAGCACCCATAGCAATACCAATCAGGTGATCAAAACCATGTTTGAAGAGGGTATTGAACGCAATGAAGTGTGCAATGATCATACACCGGAAAATCTGACCAAAATGCTGCATGGTATTTGCTATAGCGTGTTTATTCAGGCCAATCGTAATAGCAGCAGCGAAGAAATGGAAGAAACCGCAAATTGCTTTCTGAATATGCTGTGCATCTACAAATAA"));
cds PhlF(.SEQUENCE("ATGGCACGTACCCCGAGCCGTAGCAGCATTGGTAGCCTGCGTAGTCCGCATACCCATAAAGCAATTCTGACCAGCACCATTGAAATCCTGAAAGAATGTGGTTATAGCGGTCTGAGCATTGAAAGCGTTGCACGTCGTGCCGGTGCAAGCAAACCGACCATTTATCGTTGGTGGACCAATAAAGCAGCACTGATTGCCGAAGTGTATGAAAATGAAAGCGAACAGGTGCGTAAATTTCCGGATCTGGGTAGCTTTAAAGCCGATCTGGATTTTCTGCTGCGTAATCTGTGGAAAGTTTGGCGTGAAACCATTTGTGGTGAAGCATTTCGTTGTGTTATTGCAGAAGCACAGCTGGACCCTGCAACCCTGACCCAGCTGAAAGATCAGTTTATGGAACGTCGTCGTGAGATGCCGAAAAAACTGGTTGAAAATGCCATTAGCAATGGTGAACTGCCGAAAGATACCAATCGTGAACTGCTGCTGGATATGATTTTTGGTTTTTGTTGGTATCGCCTGCTGACCGAACAGCTGACCGTTGAACAGGATATTGAAGAATTTACCTTCCTGCTGATTAATGGTGTTTGTCCGGGTACACAGCGTTAA"));
cds QacR(.SEQUENCE("ATGAACCTGAAAGATAAAATTCTGGGCGTTGCCAAAGAACTGTTTATCAAAAATGGCTATAACGCAACCACCACCGGTGAAATTGTTAAACTGAGCGAAAGCAGCAAAGGCAATCTGTATTATCACTTTAAAACCAAAGAGAACCTGTTTCTGGAAATCCTGAACATCGAAGAAAGCAAATGGCAAGAGCAGTGGAAAAAAGAACAAATCAAATGCAAAACCAACCGCGAGAAATTCTATCTGTATAATGAACTGAGCCTGACCACCGAATATTACTATCCGCTGCAGAATGCCATCATCGAGTTTTATACCGAGTACTATAAAACCAACAGCATCAACGAGAAAATGAACAAACTGGAAAACAAATACATCGATGCCTACCACGTGATCTTTAAAGAAGGTAATCTGAACGGCGAATGGTGCATTAATGATGTTAATGCCGTGAGCAAAATTGCAGCAAATGCCGTTAATGGCATTGTTACCTTTACCCATGAGCAGAATATCAACGAACGCATTAAACTGATGAACAAATTCAGCCAGATCTTTCTGAATGGCCTGAGCAAATAA"));
cds SrpR(.SEQUENCE("ATGGCACGTAAAACCGCAGCAGAAGCAGAAGAAACCCGTCAGCGTATTATTGATGCAGCACTGGAAGTTTTTGTTGCACAGGGTGTTAGTGATGCAACCCTGGATCAGATTGCACGTAAAGCCGGTGTTACCCGTGGTGCAGTTTATTGGCATTTTAATGGTAAACTGGAAGTTCTGCAGGCAGTTCTGGCAAGCCGTCAGCATCCGCTGGAACTGGATTTTACACCGGATCTGGGTATTGAACGTAGCTGGGAAGCAGTTGTTGTTGCAATGCTGGATGCAGTTCATAGTCCGCAGAGCAAACAGTTTAGCGAAATTCTGATTTATCAGGGTCTGGATGAAAGCGGTCTGATTCATAATCGTATGGTTCAGGCAAGCGATCGTTTTCTGCAGTATATTCATCAGGTTCTGCGTCATGCAGTTACCCAGGGTGAACTGCCGATTAATCTGGATCTGCAGACCAGCATTGGTGTTTTTAAAGGTCTGATTACCGGTCTGCTGTATGAAGGTCTGCGTAGCAAAGATCAGCAGGCACAGATTATCAAAGTTGCACTGGGTAGCTTTTGGGCACTGCTGCGTGAACCGCCTCGTTTTCTGCTGTGTGAAGAAGCACAGATTAAACAGGTGAAATCCTTCGAATAA"));
output YFP(.SEQUENCE("CTGAAGCTGTCACCGGATGTGCTTTCCGGTCTGATGAGTCCGTGAGGACGAAACAGCCTCTACAAATAATTTTGTTTAATACTAGAGAAAGAGGGGAAATACTAGATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATCTGCACCACAGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCTTCGGCTACGGCCTGCAATGCTTCGCCCGCTACCCCGACCACATGAAGCTGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCAATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTTAGCTACCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAACTCGGTACCAAATTCCAGAAAAGAGGCCTCCCGAAAGGGGGGCCTTTTTTCGTTTTGGTCC"));
promoter pAmtR(.SEQUENCE("CTTGTCCAACCAAATGATTCGTTACCAATTGACAGTTTCTATCGATCTATAGATAATGCTAGC"));
promoter pBAD(.SEQUENCE("ACTTTTCATACTCCCGCCATTCAGAGAAGAAACCAATTGTCCATATTGCATCAGACATTGCCGTCACTGCGTCTTTTACTGGCTCTTCTCGCTAACCAAACCGGTAACCCCGCTTATTAAAAGCATTCTGTAACAAAGCGGGACCAAAGCCATGACAAAAACGCGTAACAAAAGTGTCTATAATCACGGCAGAAAAGTCCACATTGATTATTTGCACGGCGTCACACTTTGCTATGCCATAGCATTTTTATCCATAAGATTAGCGGATCCTACCTGACGCTTTTTATCGCAACTCTCTACTGTTTCTCCATACCCGTTTTTTTGGGCTAGC"));
promoter pBM3R1(.SEQUENCE("AATCCGCGTGATAGGTCTGATTCGTTACCAATTGACGGAATGAACGTTCATTCCGATAATGCTAGC"));
promoter pDigital(.SEQUENCE("TCTATGATTTTGTTTGTAAAC"));
promoter pDigitalQS(.SEQUENCE("TTTTGTTTGTAAAC"));
promoter pHlyIIR(.SEQUENCE("ACCAGGAATCTGAACGATTCGTTACCAATTGACATATTTAAAATTCTTGTTTAAAatgctagc"));
promoter pIcaRA(.SEQUENCE("GTCAACTCATAAGATtctgattcgttaccaattgacaaTTCACCTACCTTTCGTTAGgTTAGGTTGT"));
promoter pLitR(.SEQUENCE("CGAGCGTAGAGCTTAgattcgttaccaatTGACAAATTTATAAATTGTCAgtacagtcctagc"));
promoter pPhlF(.SEQUENCE("CGACGTACGGTGGAAtctgattcgttaccaattgacATGATACGAAACGTACCGTATCGTTAAGGT"));
promoter pQacR(.SEQUENCE("ggtatggaagctatacgttaccaattgacagctagctcagtccTACTTTAGTATATAGACCGTGCGATCGGTCTATA"));
promoter pSrpR(.SEQUENCE("TCTATGATTGGTCCAGATTCGTTACCAATTGACAGCTAGCTCAGTCCTAGGTATATACATACATGCTTGTTTGTTTGTAAAC"));
promoter pTac(.SEQUENCE("AACGATCGTTGGCTGTGTTGACAATTAATCATCGGCTCGTATAATGTGTGGAATTGTGAGCGCTCACAATT"));
promoter pTet(.SEQUENCE("TACTCCACCGTTGGCTTTTTTCCCTATCAGTGATAGAGATTGACATCCCTATCAGTGATAGAGATAATGAGCAC"));
rbs A1(.SEQUENCE("AATGTTCCCTAATAATCAGCAAAGAGGTTACTAG"));
rbs B3(.SEQUENCE("CCAAACGAGGCCGGGAGG"));
rbs H1(.SEQUENCE("ACCCCCGAG"));
rbs I1(.SEQUENCE("ATTGCTATGGACTATGTTTCAAAGTGAGAATACTAG"));
rbs L1(.SEQUENCE("GTCCTATGGACTTTTTCATACAGGAGAACCCTCG"));
rbs P3(.SEQUENCE("CTTTACGAGGGCGATCCT"));
rbs Q2(.SEQUENCE("GCCATGCCATTGGCTTTTGATAGAGGACAACTACTAG"));
rbs S4(.SEQUENCE("CTATGGACTATGTTTTCACACAGGAAATACCAGG"));
ribozyme BydvJ(.SEQUENCE("CTGAagGGTGTCTCAAGGTGCGTACCTTGACTGATGAGTCCGAAAGGACGAAACACCcctctacaaataattttgtttaa"));
ribozyme ElvJ(.SEQUENCE("CTGAagCCCCATAGGGTGGTGTGTACCACCCCTGATGAGTCCAAAAGGACGAAATGGGGcctctacaaataattttgtttaa"));
ribozyme PlmJ(.SEQUENCE("CTGAAGTCATAAGTCTGGGCTAAGCCCACTGATGAGTCGCTGAAATGCGACGAAACTTATGACCTCTACAAATAATTTTGTTTAA"));
ribozyme RiboJ10(.SEQUENCE("CTGAAGCGCTCAACGGGTGTGCTTCCCGTTCTGATGAGTCCGTGAGGACGAAAGCGCCTCTACAAATAATTTTGTTTAA"));
ribozyme RiboJ51(.SEQUENCE("CTGAAGTAGTCACCGGCTGTGCTTGCCGGTCTGATGAGCCTGTGAAGGCGAAACTACCTCTACAAATAATTTTGTTTAA"));
ribozyme RiboJ53(.SEQUENCE("CTGAAGCGGTCAACGCATGTGCTTTGCGTTCTGATGAGACAGTGATGTCGAAACCGCCTCTACAAATAATTTTGTTTAA"));
ribozyme RiboJ60(.SEQUENCE("CTGAAGTCGTCAAGTGCTGTGCTTGCACTTCTGATGAGGCAGTGATGCCGAAACGACCTCTACAAATAATTTTGTTTAA"));
ribozyme SarJ(.SEQUENCE("CTGAGACTGTCGCCGGATGTGTATCCGACCTGACGATGGCCCAAAAGGGCCGAAACAGTCCTCTACAAATAATTTTGTTTAA"));
scar Ascar(.SEQUENCE("ggag"));
scar Bscar(.SEQUENCE("tacg"));
scar Cscar(.SEQUENCE("aatg"));
scar Dscar(.SEQUENCE("aggt"));
scar Escar(.SEQUENCE("gctt"));
scar Fscar(.SEQUENCE("cgct"));
scar Pscar(.SEQUENCE("ccta"));
scar Qscar(.SEQUENCE("gagt"));
scar Uscar(.SEQUENCE("gggc"));
scar Vscar(.SEQUENCE("tctg"));
scar Xscar(.SEQUENCE("tgtc"));
scar Yscar(.SEQUENCE("attg"));
terminator ECK120010818(.SEQUENCE("GTCAGTTTCACCTGTTTTACGTAAAAACCCGCTTCGGCGGGTTTTTACTTTTGG"));
terminator ECK120016170(.SEQUENCE("ACAATTTTCGAAAAAACCCGCTTCGGCGGGTTTTTTTATAGCTAAAA"));
terminator ECK120029600(.SEQUENCE("TTCAGCCAAAAAACTTAAGACCGCCGGTCTTGTCCACTACCTTGCAGTAATGCGGTGGACAGGATCGGCGGTTTTCTTTTCTCTTCTCAA"));
terminator ECK120033736(.SEQUENCE("aacgcatgagAAAGCCCCCGGAAGATCACCTTCCGGGGGCTTTtttattgcgc"));
terminator ECK120033737(.SEQUENCE("ggaaacacagAAAAAAGCCCGCACCTGACAGTGCGGGCTTTTTTTTTcgaccaaagg"));
terminator L3S2P11(.SEQUENCE("CTCGGTACCAAATTCCAGAAAAGAGACGCTTTCGAGCGTCTTTTTTCGTTTTGGTCC"));
terminator L3S2P24(.SEQUENCE("CTCGGTACCAAATTCCAGAAAAGACACCCGAAAGGGTGTTTTTTCGTTTTGGTCC"));
terminator L3S2P55(.SEQUENCE("CTCGGTACCAAAGACGAACAATAAGACGCTGAAAAGCGTCTTTTTTCGTTTTGGTCC"));

Device BM3R1_device(
   promoter,
   SarJ,
   B3,
   BM3R1,
   L3S2P11
);
Device YFP_device(
   promoter,
   YFP
);
Device IcaRA_device(
   promoter,
   ElvJ,
   I1,
   IcaRA,
   ECK120016170
);
Device AmtR_device(
   promoter,
   promoter,
   BydvJ,
   A1,
   AmtR,
   L3S2P55
);
Device SrpR_device(
   promoter,
   RiboJ10,
   S4,
   SrpR,
   ECK120029600
);
Device PhlF_device(
   promoter,
   promoter,
   RiboJ53,
   P3,
   PhlF,
   ECK120033737
);
Device QacR_device(
   promoter,
   promoter,
   RiboJ60,
   Q2,
   QacR,
   ECK120010818
);
Device HlyIIR_device(
   promoter,
   promoter,
   RiboJ51,
   H1,
   HlyIIR,
   ECK120033736
);
Device DigiJ_device(
   promoter,
   promoter,
   DigiJ
);
Device LitR_device(
   promoter,
   PlmJ,
   L1,
   LitR,
   L3S2P24
);
Device DigiJQ_device(
   promoter,
   promoter,
   DigiJQ
);

Rule BM3R1_rules ( ON BM3R1_device:
   CONTAINS pTac AND
   ALL_FORWARD
);
Rule YFP_rules ( ON YFP_device:
   CONTAINS pDigital AND
   ALL_FORWARD
);
Rule IcaRA_rules ( ON IcaRA_device:
   CONTAINS pTet AND
   ALL_FORWARD
);
Rule AmtR_rules ( ON AmtR_device:
   CONTAINS pTet AND 
   CONTAINS pTac AND
   ALL_FORWARD
);
Rule SrpR_rules ( ON SrpR_device:
   CONTAINS pQacR AND
   ALL_FORWARD
);
Rule PhlF_rules ( ON PhlF_device:
   CONTAINS pBAD AND 
   CONTAINS pQacR AND
   ALL_FORWARD
);
Rule QacR_rules ( ON QacR_device:
   CONTAINS pHlyIIR AND 
   CONTAINS pAmtR AND
   ALL_FORWARD
);
Rule HlyIIR_rules ( ON HlyIIR_device:
   CONTAINS pIcaRA AND 
   CONTAINS pBM3R1 AND
   ALL_FORWARD
);
Rule DigiJ_rules ( ON DigiJ_device:
   CONTAINS pDigitalQS AND 
   CONTAINS pPhlF AND
   ALL_FORWARD
);
Rule LitR_rules ( ON LitR_device:
   CONTAINS pBAD AND
   ALL_FORWARD
);
Rule DigiJQ_rules ( ON DigiJQ_device:
   CONTAINS pLitR AND 
   CONTAINS pSrpR AND
   ALL_FORWARD
);


BM3R1_devices   = product(BM3R1_device);
YFP_devices     = product(YFP_device);
IcaRA_devices   = product(IcaRA_device);
AmtR_devices    = product(AmtR_device);
SrpR_devices    = product(SrpR_device);
PhlF_devices    = product(PhlF_device);
QacR_devices    = product(QacR_device);
HlyIIR_devices  = product(HlyIIR_device);
DigiJ_devices   = product(DigiJ_device);
LitR_devices    = product(LitR_device);
DigiJQ_devices  = product(DigiJQ_device);

Device gate_BM3R1();
Device gate_YFP();
Device gate_IcaRA();
Device gate_AmtR();
Device gate_SrpR();
Device gate_PhlF();
Device gate_QacR();
Device gate_HlyIIR();
Device gate_DigiJ();
Device gate_LitR();
Device gate_DigiJQ();

Device circuit();

Rule allRules( ON circuit:
   gate_BM3R1   EXACTLY 1 AND 
   gate_YFP     EXACTLY 1 AND 
   gate_IcaRA   EXACTLY 1 AND 
   gate_AmtR    EXACTLY 1 AND 
   gate_SrpR    EXACTLY 1 AND 
   gate_PhlF    EXACTLY 1 AND 
   gate_QacR    EXACTLY 1 AND 
   gate_HlyIIR  EXACTLY 1 AND 
   gate_DigiJ   EXACTLY 1 AND 
   gate_LitR    EXACTLY 1 AND 
   gate_DigiJQ  EXACTLY 1 AND 
   Escar        EXACTLY 1 AND 
   Xscar        EXACTLY 1 AND 
   Vscar        EXACTLY 1 AND 
   Uscar        EXACTLY 1 AND 
   Fscar        EXACTLY 1 AND 
   Dscar        EXACTLY 1 AND 
   Bscar        EXACTLY 1 AND 
   Ascar        EXACTLY 1 AND 
   Yscar        EXACTLY 1 AND 
   Qscar        EXACTLY 1 AND 
   Pscar        EXACTLY 1 AND 
   Cscar        EXACTLY 1 AND 
   FORWARD Escar AND 
   FORWARD Xscar AND 
   FORWARD Vscar AND 
   FORWARD Uscar AND 
   FORWARD Fscar AND 
   FORWARD Dscar AND 
   FORWARD Bscar AND 
   FORWARD Ascar AND 
   FORWARD Yscar AND 
   FORWARD Qscar AND 
   FORWARD Pscar AND 
   FORWARD Cscar AND 
   [0] EQUALS Escar AND 
   [2] EQUALS Xscar AND 
   [4] EQUALS Vscar AND 
   [6] EQUALS Uscar AND 
   [8] EQUALS Fscar AND 
   [10] EQUALS Dscar AND 
   [12] EQUALS Bscar AND 
   [14] EQUALS Ascar AND 
   [16] EQUALS Yscar AND 
   [18] EQUALS Qscar AND 
   [20] EQUALS Pscar AND 
   [22] EQUALS Cscar
);

Array allResults;

for(num i1=0;  i1<sizeof(BM3R1_devices);   i1=i1+1) {
for(num i2=0;  i2<sizeof(YFP_devices);     i2=i2+1) {
for(num i3=0;  i3<sizeof(IcaRA_devices);   i3=i3+1) {
for(num i4=0;  i4<sizeof(AmtR_devices);    i4=i4+1) {
for(num i5=0;  i5<sizeof(SrpR_devices);    i5=i5+1) {
for(num i6=0;  i6<sizeof(PhlF_devices);    i6=i6+1) {
for(num i7=0;  i7<sizeof(QacR_devices);    i7=i7+1) {
for(num i8=0;  i8<sizeof(HlyIIR_devices);  i8=i8+1) {
for(num i9=0;  i9<sizeof(DigiJ_devices);   i9=i9+1) {
for(num i10=0;  i10<sizeof(LitR_devices);   i10=i10+1) {
for(num i11=0;  i11<sizeof(DigiJQ_devices); i11=i11+1) {

gate_BM3R1   = BM3R1_devices[i1];
gate_YFP     = YFP_devices[i2];
gate_IcaRA   = IcaRA_devices[i3];
gate_AmtR    = AmtR_devices[i4];
gate_SrpR    = SrpR_devices[i5];
gate_PhlF    = PhlF_devices[i6];
gate_QacR    = QacR_devices[i7];
gate_HlyIIR  = HlyIIR_devices[i8];
gate_DigiJ   = DigiJ_devices[i9];
gate_LitR    = LitR_devices[i10];
gate_DigiJQ  = DigiJQ_devices[i11];

Device circuit(
   gate_BM3R1,
   gate_YFP,
   gate_IcaRA,
   gate_AmtR,
   gate_SrpR,
   gate_PhlF,
   gate_QacR,
   gate_HlyIIR,
   gate_DigiJ,
   gate_LitR,
   gate_DigiJQ,
   Escar,
   Xscar,
   Vscar,
   Uscar,
   Fscar,
   Dscar,
   Bscar,
   Ascar,
   Yscar,
   Qscar,
   Pscar,
   Cscar
);

result = permute(circuit);

allResults = allResults + result;

}
}
}
}
}
}
}
}
}
}
}
